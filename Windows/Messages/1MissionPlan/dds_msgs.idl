module dds_msgs {
  enum EnumMission {
    @value(0)
    @default_literal
    None,
    @value(1)
    AirBuild,
    @value(2)
    AirDiff,
    @value(3)
    GroundBuild,
    @value(4)
    GroundDiff
  };

  enum EnumPlatform {
    @value(0)
    @default_literal
    None,
    @value(1)
    Drone,
    @value(2)
    UGV
  };

  enum EnumScan {
    @value(0)
    @default_literal
    None,
    @value(1)
    Rectangular,
    @value(2)
    LocalSquare
  };

  enum EnumJpegGenerationSts {
    @value(0)
    @default_literal
    None,
    @value(1)
    Waiting,
    @value(2)
    Generating,
    @value(3)
    Fail
  };

  enum EnumLasFileTransmissionSts {
    @value(0)
    @default_literal
    None,
    @value(1)
    Finished,
    @value(2)
    Verified,
    @value(3)
    Error1,
    @value(4)
    Error2
  };

  enum EnumCalculation {
    @value(0)
    @default_literal
    None,
    @value(1)
    NewModel,
    @value(2)
    DiffAnalysis
  };

  @nested
  struct GeoPoint {
    double Lat;
    double Lon;
    double Alt;
  };

  @nested
  struct LocalScan {
    dds_msgs::GeoPoint SquareCenter;
    @default(0)
    @range(min=0, max=5000)
    uint16 SquareSide;
  };

  struct BaseMsg {
    @key
    @default(0)
    uint8 MsgId;
    @default(0)
    uint32 MsgCount;
    @key
    @default(0)
    uint16 MissionId;
  };

  struct GetDroneScanRouteMsg : dds_msgs::BaseMsg {
    @default(0)
    dds_msgs::EnumScan ScanType;
    sequence<dds_msgs::GeoPoint, 3> ScanArea;
    @default(0)
    @range(min=-432, max=3000)
    int16 ScanAreaGroundAvgAlt;
    @default(0)
    @range(min=0, max=1500)
    int16 FlightAltAboveGroundAvgAlt;
    @default(0)
    @range(min=-432, max=3000)
    int16 TakeoffAltAboveSeaLevel;
    @default(0)
    @range(min=0, max=40)
    uint8 FlightSpeed;
    @default(0)
    @range(min=0, max=180)
    uint8 CameraHorizontalFOV;
    @default(0)
    @range(min=0, max=180)
    uint8 CameraVerticalFOV;
    @default(0)
    @range(min=0, max=15000)
    uint16 CameraHorizontalResolution;
    @default(0)
    @range(min=0, max=15000)
    uint16 CameraVerticalResolution;
    @default(0)
    @range(min=0, max=100)
    uint8 OverlapInFlightDirection;
    @default(0)
    @range(min=0, max=100)
    uint8 OverlapInLateralDirection;
    @default(0)
    @range(min=-9000, max=9000)
    int16 GimbalPitchAngle;
    dds_msgs::GeoPoint SquareCenter;
    @default(0)
    @range(min=0, max=5000)
    uint16 SquareSide;
  };

  struct DroneScanRouteMsg : dds_msgs::BaseMsg {
    sequence<dds_msgs::GeoPoint> Waypoints;
    @default(0)
    @range(min=0, max=20000)
    uint16 ScanAreaLength;
    @default(0)
    @range(min=0, max=20000)
    uint16 ScanAreaWidth;
    @default(0)
    @range(min=0, max=100)
    uint8 ModelGroundResolution;
    @default(0)
    @range(min=0, max=3000)
    uint16 TimePeriodBetweenFrames;
    @default(0)
    @range(min=0, max=20000)
    uint16 ShortLegLength;
    @default(0)
    @range(min=0, max=3000)
    uint16 NumOfFramesPerLongLeg;
    @default(0)
    @range(min=0, max=20000)
    uint16 TotalNumOfFrames;
  };

  struct PlatformLocationMsg : dds_msgs::BaseMsg {
    dds_msgs::EnumPlatform PlatformType;
    @default(0)
    @range(min=0, max=255)
    uint8 PlatformId;
    @default(0)
    @range(min=0, max=200)
    uint8 PlatformSpeed;
    @default(0)
    @range(min=-3.1415926, max=3.1415926)
    double PlatformHeading;
    dds_msgs::GeoPoint PlatformLocation;
    @default(0)
    uint64 Timestamp;
  };

  struct StartJpegGenerationMsg : dds_msgs::BaseMsg {
    dds_msgs::EnumPlatform PlatformType;
    string<256> GeoPathJpegFiles;
  };

  struct ReportJpegGenerationLivenessMsg : dds_msgs::BaseMsg {
    @default(0)
    uint16 NumOfJpegFiles;
    @default(0)
    dds_msgs::EnumJpegGenerationSts Status;
    @default(0)
    octet ErrorCode;
  };

  struct LasFileTransmissionStsMsg : dds_msgs::BaseMsg {
    @default(0)
    dds_msgs::EnumLasFileTransmissionSts Status;
  };

  struct SingleUrlMsg : dds_msgs::BaseMsg {
    string<256> CloudUrl;
  };

  struct DoubleUrlMsg : dds_msgs::BaseMsg {
    string<256> GeoPath;
    string<256> CloudUrl;
  };

  struct MissionPlanMsg : dds_msgs::BaseMsg {
      string<256> MissionName;
      @default(0)
          dds_msgs::EnumMission MissionType;
      @default(0)
          uint8 StationId;
      dds_msgs::EnumPlatform PlatformType;
      @default(0)
          uint16 PlatformId;
      @default(0)
          dds_msgs::EnumScan ScanType;
      dds_msgs::GeoPoint ScanArea[3];
      @default(0)
          @range(min = -432, max = 3000)
          int16 ScanAreaGroundAvgAlt;
      @default(0)
          @range(min = 0, max = 1500)
          uint16 FlightAltAboveGroundAvgAlt;
      @default(0)
          @range(min = -432, max = 3000)
          int16 TakeoffAltAboveSeaLevel;
      @default(0)
          @range(min = 0, max = 40)
          uint8 FlightSpeed;
      @default(0)
          @range(min = 0, max = 180)
          uint8 CameraHorizontalFOV;
      @default(0)
          @range(min = 0, max = 180)
          uint8 CameraVerticalFOV;
      @default(0)
          @range(min = 0, max = 15000)
          uint16 CameraHorizontalResolution;
      @default(0)
          @range(min = 0, max = 15000)
          uint16 CameraVerticalResolution;
      @default(0)
          @range(min = 0, max = 100)
          uint8 OverlapInFlightDirection;
      @default(0)
          @range(min = 0, max = 100)
          uint8 OverlapInLateralDirection;
      @default(0)
          @range(min = -9000, max = 9000)
          int16 GimbalPitchAngle;
      dds_msgs::GeoPoint SquareCenter;
      @default(0)
          @range(min = 0, max = 5000)
          uint16 SquareSide;
      @optional
          string<256> GeoPathJpegFiles;
      string<256> GeoPathCurrModel;
      @optional
          string<256> GeoPathRefModel;
      @optional
          string<256> GeoPathDiffModel;
      string<256> CloudUrlCurrModel;
      @optional
          string<256> CloudUrlRefModel;
      @optional
          string<256> CloudUrlDiffModel;
  };

};

